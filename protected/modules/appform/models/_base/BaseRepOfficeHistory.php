<?php

/**
 * This is the model base class for the table "appform_rep_office_history".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RepOfficeHistory".
 *
 * Columns in table "appform_rep_office_history" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $application_form_id
 * @property string $first_name
 * @property string $last_name
 * @property string $birth_date
 * @property integer $nationality_id
 * @property string $parent_company
 * @property string $register_place
 * @property string $business
 * @property string $objective
 * @property string $house_no
 * @property integer $province_id
 * @property integer $district_id
 * @property integer $village_id
 * @property integer $capital
 * @property integer $fixed_asset
 * @property integer $cash
 * @property integer $user_action_id
 * @property string $action_time
 *
 */
abstract class BaseRepOfficeHistory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'appform_rep_office_history';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'RepOfficeHistory|RepOfficeHistories', $n);
	}

	public static function representingColumn() {
		return 'first_name';
	}

	public function rules() {
		return array(
			array('id, application_form_id, first_name, last_name, birth_date, nationality_id, parent_company, register_place, business, objective, province_id, district_id, village_id, capital, fixed_asset, cash, user_action_id, action_time', 'required'),
			array('id, application_form_id, nationality_id, province_id, district_id, village_id, capital, fixed_asset, cash, user_action_id', 'numerical', 'integerOnly'=>true),
			array('first_name, last_name, parent_company, register_place', 'length', 'max'=>255),
			array('house_no', 'length', 'max'=>45),
			array('house_no', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, application_form_id, first_name, last_name, birth_date, nationality_id, parent_company, register_place, business, objective, house_no, province_id, district_id, village_id, capital, fixed_asset, cash, user_action_id, action_time', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'application_form_id' => Yii::t('app', 'Application Form'),
			'first_name' => Yii::t('app', 'First Name'),
			'last_name' => Yii::t('app', 'Last Name'),
			'birth_date' => Yii::t('app', 'Birth Date'),
			'nationality_id' => Yii::t('app', 'Nationality'),
			'parent_company' => Yii::t('app', 'Parent Company'),
			'register_place' => Yii::t('app', 'Register Place'),
			'business' => Yii::t('app', 'Business'),
			'objective' => Yii::t('app', 'Objective'),
			'house_no' => Yii::t('app', 'House No'),
			'province_id' => Yii::t('app', 'Province'),
			'district_id' => Yii::t('app', 'District'),
			'village_id' => Yii::t('app', 'Village'),
			'capital' => Yii::t('app', 'Capital'),
			'fixed_asset' => Yii::t('app', 'Fixed Asset'),
			'cash' => Yii::t('app', 'Cash'),
			'user_action_id' => Yii::t('app', 'User Action'),
			'action_time' => Yii::t('app', 'Action Time'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('application_form_id', $this->application_form_id);
		$criteria->compare('first_name', $this->first_name, true);
		$criteria->compare('last_name', $this->last_name, true);
		$criteria->compare('birth_date', $this->birth_date, true);
		$criteria->compare('nationality_id', $this->nationality_id);
		$criteria->compare('parent_company', $this->parent_company, true);
		$criteria->compare('register_place', $this->register_place, true);
		$criteria->compare('business', $this->business, true);
		$criteria->compare('objective', $this->objective, true);
		$criteria->compare('house_no', $this->house_no, true);
		$criteria->compare('province_id', $this->province_id);
		$criteria->compare('district_id', $this->district_id);
		$criteria->compare('village_id', $this->village_id);
		$criteria->compare('capital', $this->capital);
		$criteria->compare('fixed_asset', $this->fixed_asset);
		$criteria->compare('cash', $this->cash);
		$criteria->compare('user_action_id', $this->user_action_id);
		$criteria->compare('action_time', $this->action_time, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}