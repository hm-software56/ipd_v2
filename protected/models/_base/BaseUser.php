<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $status
 * @property string $last_login
 *
 * @property Assign[] $assigns
 * @property Comment[] $comments
 * @property CommentToUser[] $commentToUsers
 * @property Document[] $documents
 * @property Document[] $documents1
 * @property UserProfile $userProfile
 */
abstract class BaseUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'username';
	}

	public function rules() {
		return array(
			array('username, password, last_login', 'required'),
			array('username', 'length', 'max'=>45),
			array('password', 'length', 'max'=>60),
			array('status', 'length', 'max'=>8),
			array('status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, username, password, status, last_login', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'assigns' => array(self::HAS_MANY, 'Assign', 'user_id'),
			'comments' => array(self::HAS_MANY, 'Comment', 'user_id'),
			'commentToUsers' => array(self::HAS_MANY, 'CommentToUser', 'user_id'),
			'documents' => array(self::HAS_MANY, 'Document', 'created_by'),
			'documents1' => array(self::HAS_MANY, 'Document', 'last_modified_id'),
			'userProfile' => array(self::HAS_ONE, 'UserProfile', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'username' => Yii::t('app','Username'),
			'password' => Yii::t('app','Password'),
			'status' => Yii::t('app','Status'),
			'last_login' => Yii::t('app', 'Last Login'),
			'assigns' => null,
			'comments' => null,
			'commentToUsers' => null,
			'documents' => null,
			'documents1' => null,
			'userProfile' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('last_login', $this->last_login, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}