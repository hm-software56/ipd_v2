<?php

/**
 * This is the model base class for the table "invest_company".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InvestCompany".
 *
 * Columns in table "invest_company" available as properties of the model,
 * followed by relations of table "invest_company" available as properties of the model.
 *
 * @property integer $id
 * @property string $company_name
 * @property string $register_place
 * @property string $register_date
 * @property integer $total_capital
 * @property integer $capital
 * @property string $president_first_name
 * @property string $president_last_name
 * @property string $president_nationality
 * @property string $president_position
 * @property string $headquarter_address
 * @property string $business_sector
 *
 * @property InvestElectrict[] $investElectricts
 * @property InvestGeneral[] $investGenerals
 * @property InvestMining[] $investMinings
 */
abstract class BaseInvestCompany extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'invest_company';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InvestCompany|InvestCompanies', $n);
	}

	public static function representingColumn() {
		return 'company_name';
	}

	public function rules() {
		return array(
			array('company_name, register_place, register_date, total_capital, capital, president_first_name, president_last_name, president_nationality, president_position, headquarter_address, business_sector', 'required'),
			array('total_capital, capital', 'numerical', 'integerOnly'=>true),
			array('company_name, register_place, president_first_name, president_last_name, president_nationality, president_position, headquarter_address, business_sector', 'length', 'max'=>255),
			array('id, company_name, register_place, register_date, total_capital, capital, president_first_name, president_last_name, president_nationality, president_position, headquarter_address, business_sector', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'investElectricts' => array(self::HAS_MANY, 'InvestElectrict', 'invest_company_id'),
			'investGenerals' => array(self::HAS_MANY, 'InvestGeneral', 'invest_company_id'),
			'investMinings' => array(self::HAS_MANY, 'InvestMining', 'invest_company_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'company_name' => Yii::t('app', 'Company Name'),
			'register_place' => Yii::t('app', 'Register Place'),
			'register_date' => Yii::t('app', 'Register Date'),
			'total_capital' => Yii::t('app', 'Total Capital'),
			'capital' => Yii::t('app', 'Capital'),
			'president_first_name' => Yii::t('app', 'President First Name'),
			'president_last_name' => Yii::t('app', 'President Last Name'),
			'president_nationality' => Yii::t('app', 'President Nationality'),
			'president_position' => Yii::t('app', 'President Position'),
			'headquarter_address' => Yii::t('app', 'Headquarter Address'),
			'business_sector' => Yii::t('app', 'Business Sector'),
			'investElectricts' => null,
			'investGenerals' => null,
			'investMinings' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('company_name', $this->company_name, true);
		$criteria->compare('register_place', $this->register_place, true);
		$criteria->compare('register_date', $this->register_date, true);
		$criteria->compare('total_capital', $this->total_capital);
		$criteria->compare('capital', $this->capital);
		$criteria->compare('president_first_name', $this->president_first_name, true);
		$criteria->compare('president_last_name', $this->president_last_name, true);
		$criteria->compare('president_nationality', $this->president_nationality, true);
		$criteria->compare('president_position', $this->president_position, true);
		$criteria->compare('headquarter_address', $this->headquarter_address, true);
		$criteria->compare('business_sector', $this->business_sector, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}