<?php

/**
 * This is the model base class for the table "document_receiver_history".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DocumentReceiverHistory".
 *
 * Columns in table "document_receiver_history" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $out_document_id
 * @property integer $to_organization_id
 * @property integer $document_status_id
 * @property string $status_date
 * @property string $receiver_name
 * @property integer $user_action_id
 * @property string $action_time
 *
 */
abstract class BaseDocumentReceiverHistory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'document_receiver_history';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DocumentReceiverHistory|DocumentReceiverHistories', $n);
	}

	public static function representingColumn() {
		return 'status_date';
	}

	public function rules() {
		return array(
			array('out_document_id, to_organization_id, document_status_id, status_date, user_action_id, action_time', 'required'),
			array('out_document_id, to_organization_id, document_status_id, user_action_id', 'numerical', 'integerOnly'=>true),
			array('receiver_name', 'length', 'max'=>255),
			array('receiver_name', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, out_document_id, to_organization_id, document_status_id, status_date, receiver_name, user_action_id, action_time', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'out_document_id' => Yii::t('app', 'Out Document'),
			'to_organization_id' => Yii::t('app', 'To Organization'),
			'document_status_id' => Yii::t('app', 'Document Status'),
			'status_date' => Yii::t('app', 'Status Date'),
			'receiver_name' => Yii::t('app', 'Receiver Name'),
			'user_action_id' => Yii::t('app', 'User Action'),
			'action_time' => Yii::t('app', 'Action Time'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('out_document_id', $this->out_document_id);
		$criteria->compare('to_organization_id', $this->to_organization_id);
		$criteria->compare('document_status_id', $this->document_status_id);
		$criteria->compare('status_date', $this->status_date, true);
		$criteria->compare('receiver_name', $this->receiver_name, true);
		$criteria->compare('user_action_id', $this->user_action_id);
		$criteria->compare('action_time', $this->action_time, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}