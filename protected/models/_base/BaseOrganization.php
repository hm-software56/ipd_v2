<?php

/**
 * This is the model base class for the table "organization".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Organization".
 *
 * Columns in table "organization" available as properties of the model,
 * followed by relations of table "organization" available as properties of the model.
 *
 * @property integer $id
 * @property integer $parent_id
 * @property string $organization_name
 * @property string $organization_code
 * @property integer $region_id
 *
 * @property DocumentReceiver[] $documentReceivers
 * @property FromTo[] $fromTos
 * @property FromTo[] $fromTos1
 * @property IncDocument[] $incDocuments
 * @property IncDocument[] $incDocuments1
 * @property Region $region
 * @property UserProfile[] $userProfiles
 */
abstract class BaseOrganization extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'organization';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Organization|Organizations', $n);
	}

	public static function representingColumn() {
		return 'organization_name';
	}

	public function rules() {
		return array(
			array('organization_name, organization_code, region_id', 'required'),
			array('parent_id, region_id', 'numerical', 'integerOnly'=>true),
			array('organization_name', 'length', 'max'=>255),
			array('organization_code', 'length', 'max'=>50),
			array('parent_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, parent_id, organization_name, organization_code, region_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'documentReceivers' => array(self::HAS_MANY, 'DocumentReceiver', 'to_organization_id'),
			'fromTos' => array(self::HAS_MANY, 'FromTo', 'from_organization_id'),
			'fromTos1' => array(self::HAS_MANY, 'FromTo', 'to_organization_id'),
			'incDocuments' => array(self::HAS_MANY, 'IncDocument', 'from_organization_id'),
			'incDocuments1' => array(self::HAS_MANY, 'IncDocument', 'to_organization_id'),
			'region' => array(self::BELONGS_TO, 'Region', 'region_id'),
			'userProfiles' => array(self::HAS_MANY, 'UserProfile', 'organization_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'parent_id' => Yii::t('app', 'Parent'),
			'organization_name' => Yii::t('app', 'Organization Name'),
			'organization_code' => Yii::t('app', 'Organization Code'),
			'region_id' => null,
			'documentReceivers' => null,
			'fromTos' => null,
			'fromTos1' => null,
			'incDocuments' => null,
			'incDocuments1' => null,
			'region' => null,
			'userProfiles' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('parent_id', $this->parent_id);
		$criteria->compare('organization_name', $this->organization_name, true);
		$criteria->compare('organization_code', $this->organization_code, true);
		$criteria->compare('region_id', $this->region_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}