<?php

/**
 * This is the model base class for the table "document_type".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DocumentType".
 *
 * Columns in table "document_type" available as properties of the model,
 * followed by relations of table "document_type" available as properties of the model.
 *
 * @property integer $id
 * @property string $description
 * @property integer $type_level_id
 * @property integer $parent_id
 *
 * @property Document[] $documents
 * @property TypeLevel $typeLevel
 */
abstract class BaseDocumentType extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'document_type';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DocumentType|DocumentTypes', $n);
	}

	public static function representingColumn() {
		return 'description';
	}

	public function rules() {
		return array(
			array('description, type_level_id', 'required'),
			array('type_level_id, parent_id', 'numerical', 'integerOnly'=>true),
			array('description', 'length', 'max'=>255),
			array('parent_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, description, type_level_id, parent_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'documents' => array(self::HAS_MANY, 'Document', 'document_type_id'),
			'typeLevel' => array(self::BELONGS_TO, 'TypeLevel', 'type_level_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'description' => Yii::t('app', 'Description'),
			'type_level_id' => null,
			'parent_id' => Yii::t('app', 'Parent'),
			'documents' => null,
			'typeLevel' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('type_level_id', $this->type_level_id);
		$criteria->compare('parent_id', $this->parent_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}