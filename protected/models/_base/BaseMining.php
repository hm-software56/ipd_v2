<?php

/**
 * This is the model base class for the table "mining".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Mining".
 *
 * Columns in table "mining" available as properties of the model,
 * followed by relations of table "mining" available as properties of the model.
 *
 * @property integer $id
 * @property integer $inc_document_id
 * @property string $company_name
 * @property string $objective
 * @property integer $province_id
 * @property integer $district_id
 * @property integer $village_id
 * @property integer $total_capital
 * @property integer $capital
 * @property integer $fixed_asset
 * @property integer $current_asset
 *
 * @property InvestMining $investMining
 * @property District $district
 * @property IncDocument $incDocument
 * @property Province $province
 * @property Village $village
 */
abstract class BaseMining extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'mining';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Mining|Minings', $n);
	}

	public static function representingColumn() {
		return 'company_name';
	}

	public function rules() {
		return array(
			array('inc_document_id, company_name, objective, province_id, district_id, village_id, total_capital, capital, fixed_asset, current_asset', 'required'),
			array('inc_document_id, province_id, district_id, village_id, total_capital, capital, fixed_asset, current_asset', 'numerical', 'integerOnly'=>true),
			array('company_name, objective', 'length', 'max'=>255),
			array('id, inc_document_id, company_name, objective, province_id, district_id, village_id, total_capital, capital, fixed_asset, current_asset', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'investMining' => array(self::HAS_ONE, 'InvestMining', 'mining_id'),
			'district' => array(self::BELONGS_TO, 'District', 'district_id'),
			'incDocument' => array(self::BELONGS_TO, 'IncDocument', 'inc_document_id'),
			'province' => array(self::BELONGS_TO, 'Province', 'province_id'),
			'village' => array(self::BELONGS_TO, 'Village', 'village_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'inc_document_id' => null,
			'company_name' => Yii::t('app', 'Company Name'),
			'objective' => Yii::t('app', 'Objective'),
			'province_id' => null,
			'district_id' => null,
			'village_id' => null,
			'total_capital' => Yii::t('app', 'Total Capital'),
			'capital' => Yii::t('app', 'Capital'),
			'fixed_asset' => Yii::t('app', 'Fixed Asset'),
			'current_asset' => Yii::t('app', 'Current Asset'),
			'investMining' => null,
			'district' => null,
			'incDocument' => null,
			'province' => null,
			'village' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('inc_document_id', $this->inc_document_id);
		$criteria->compare('company_name', $this->company_name, true);
		$criteria->compare('objective', $this->objective, true);
		$criteria->compare('province_id', $this->province_id);
		$criteria->compare('district_id', $this->district_id);
		$criteria->compare('village_id', $this->village_id);
		$criteria->compare('total_capital', $this->total_capital);
		$criteria->compare('capital', $this->capital);
		$criteria->compare('fixed_asset', $this->fixed_asset);
		$criteria->compare('current_asset', $this->current_asset);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}